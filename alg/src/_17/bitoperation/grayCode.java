package _17.bitoperation;

import java.util.ArrayList;
import java.util.List;

//89. 格雷编码
//格雷编码是一个二进制数字系统，在该系统中，两个连续的数值仅有一个位数的差异
//给定一个代表编码总位数的非负整数 n，打印其格雷编码序列。格雷编码序列必须以 0 开头
public class grayCode {
    public List<Integer> grayCode(int n) {
        /**
         关键是搞清楚格雷编码的生成过程, G(i) = i ^ (i/2);
         如 n = 3:
         G(0) = 000,
         G(1) = 1 ^ 0 = 001 ^ 000 = 001
         G(2) = 2 ^ 1 = 010 ^ 001 = 011
         G(3) = 3 ^ 1 = 011 ^ 001 = 010
         G(4) = 4 ^ 2 = 100 ^ 010 = 110
         G(5) = 5 ^ 2 = 101 ^ 010 = 111
         G(6) = 6 ^ 3 = 110 ^ 011 = 101
         G(7) = 7 ^ 3 = 111 ^ 011 = 100
         **/
        List<Integer> ret = new ArrayList<>();
        for(int i = 0; i < 1<<n; ++i)
            ret.add(i ^ i>>1);
        return ret;
    }


    /**
     * 补充知识：移位操作
     * <<表示左移，不分正负数，低位补0
     * >>表示右移，如果该数为正，则高位补0，若为负数，则高位补1
     * >>>表示无符号右移，也叫逻辑右移，即无论该数为正为负，高位补0
     */
}
