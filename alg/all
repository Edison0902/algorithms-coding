****
数组array
****
135. 分发糖果 - Hard
每个孩子至少分配到 1 个糖果,相邻的孩子中，评分高的孩子必须获得更多的糖果
贪心算法  1.预先初始两个数组，全部填充为1  2.左迭代，当前比之前高，当前的糖果等于之前的数量加1  3.右迭代  4.最终最小糖果数等于最大左右数组
575. 分糖果 - 简单
给定一个偶数长度的数组，其中不同的数字代表着不同种类的糖果，每一个数字代表一个糖果。你需要把这些糖果平均分给一个弟弟和一个妹妹。返回妹妹可以获得的最大糖果的种类数
思路：最大糖果的种类数  = min(set(kind), n/2)  1.排序，相同元素排列相接  2.cnt计数，限制最大数n/2
1103. 分糖果 II - 简单
给第一个小朋友 1 颗糖果，第二个小朋友 2 颗，依此类推，直到给最后一个小朋友 n 颗糖果。每次都比上一次多给出一颗糖果，当到达队伍终点后再次从队伍起点开始,剩下糖果数不够（不比前一次发出的糖果多），这些糖果也会全部发给当前的小朋友
思路：迭代糖果数，更新数组存储位置和存储数，更新剩余糖果数，原地加上糖果的负数
448. 找到所有数组中消失的数字 - 简单
给定一个范围在  1 ≤ a[i] ≤ n ( n = 数组大小 ) 的 整型数组，数组中的元素一些出现了两次，另一些只出现一次。
思路：普通替换法，置对应数组值为负值，不为负数的位置缺失
442. 数组中重复的数据 中等
找到所有出现两次的元素
输入数组中用数字的正负来表示该位置所对应数字是否已经出现过，如果数字对应的数组位置为负数，表示该数字对应的数组位置数重复
41. 缺失的第一个正数 - hard
给定一个未排序的整数数组，找出其中没有出现的最小的正整数
1.先判断是否有1 2.将所有的0和负数转换为1 3。数字对应的位置转换为负数 4。第一个不是负数的为缺失数 5。没有缺失数的返回长度
765. 情侣牵手 - hard
计算最少交换座位的次数,保证(2N-2, 2N-1)连续排列
思路：遍历数组，它的另一半为当前值异或1，如果下一位不满足要求，遍历寻找，计算交换次数
18. 杨辉三角
思路：一循环控制层数二循环控制每层数字，每层数字与上层数字相关
670. 最大交换
给定一个非负整数，你至多可以交换一次数字中的任意两位。返回你能得到的最大值。
思路：1。候选数，标记其出现的位置  2。最大数为在候选数中出现的在当前位后面的数
238. 除自身以外数组的乘积
请不要使用除法，且在 O(n) 时间复杂度内完成此题。常数空间复杂度，除了输出数组以外
思路：左迭代res=num*k 右迭代 res=num*k
48. 旋转图像
给定一个 n × n 的二维矩阵表示一个图像，将图像顺时针旋转90度
思路：1。转置 i=j 2。反转 i，j = i，n-j-1
189. 旋转数组
思路：1.0 - n-1 2.0 - k-1 3.k - n-1

技巧：
1.数组计数出现的字符出现的位置和次数
2.左右迭代
3.数字对应数组下标标记为负数



****
栈
****
739. 每日温度
与比当前元素大的下一个元素的天数差
思路：单调栈，找比当前元素大的元素位置，计算相隔的天数
150. 逆波兰表达式求值
思路：1.用数组存储操作符，Arrays.asList(arr).contains()判断是否为操作符  2.遇到数字压入栈, 遇到操作符,弹出栈顶两个元素操作
20. 有效的括号
思路：1.输入为空，有效  2.输入为奇数，无效  3.Map记录}{括号之间的映射关系,便于contains  4.遇到左括号入栈，遇到右括号判断栈顶是否为左括号contains  5.判断栈是否为空
32. 最长有效括号  ")()())"  4
思路：1.栈先保存-1，保存左括号的位置  2.左括号入栈  3.右括号出栈，栈为空保存当前节点，栈不为空求最大有效括号
155.最小栈
思路：辅助栈-数据栈正常进出栈，辅助栈用于判断当前数字与栈顶大小，记录当前最小数
225.用队列实现栈
思路：1.push 首先输入a队列中，然后拼接上b队列，交换a，b队列
232.用栈实现队列
思路：1.pop栈不为空直接输出 2.pop栈为空，push输入后输出
496.下一个更大元素 I
思路：使用栈查找比当前数大的元素，用kv保存，根据nums1生成答案
503. 下一个更大元素 II
思路：循环迭代当前元素，控制当前元素i，找到下一更大元素，保存到数组中
556. 下一个更大元素 III  32位整数的下一更大元素
思路：1.从右向左迭代找到比当前元素小的点i  2.从右到左找到第一个比i大的点j 3.交换i和j 4.反转i+1 - len - 1

