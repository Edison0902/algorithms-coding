数组array
135. 分发糖果 - Hard
每个孩子至少分配到 1 个糖果,相邻的孩子中，评分高的孩子必须获得更多的糖果
贪心算法  1.预先初始两个数组，全部填充为1  2.左迭代，当前比之前高，当前的糖果等于之前的数量加1  3.右迭代  4.最终最小糖果数等于最大左右数组
575. 分糖果 - 简单
给定一个偶数长度的数组，其中不同的数字代表着不同种类的糖果，每一个数字代表一个糖果。你需要把这些糖果平均分给一个弟弟和一个妹妹。返回妹妹可以获得的最大糖果的种类数
思路：最大糖果的种类数  = min(set(kind), n/2)  1.排序，相同元素排列相接  2.cnt计数，限制最大数n/2
1103. 分糖果 II - 简单
给第一个小朋友 1 颗糖果，第二个小朋友 2 颗，依此类推，直到给最后一个小朋友 n 颗糖果。每次都比上一次多给出一颗糖果，当到达队伍终点后再次从队伍起点开始,剩下糖果数不够（不比前一次发出的糖果多），这些糖果也会全部发给当前的小朋友
思路：迭代糖果数，更新数组存储位置和存储数，更新剩余糖果数，原地加上糖果的负数
448. 找到所有数组中消失的数字 - 简单
给定一个范围在  1 ≤ a[i] ≤ n ( n = 数组大小 ) 的 整型数组，数组中的元素一些出现了两次，另一些只出现一次。
思路：普通替换法，置对应数组值为负值，不为负数的位置缺失
442. 数组中重复的数据 中等
找到所有出现两次的元素
输入数组中用数字的正负来表示该位置所对应数字是否已经出现过，如果数字对应的数组位置为负数，表示该数字对应的数组位置数重复
41. 缺失的第一个正数 - hard
给定一个未排序的整数数组，找出其中没有出现的最小的正整数
1.先判断是否有1 2.将所有的0和负数转换为1 3。数字对应的位置转换为负数 4。第一个不是负数的为缺失数 5。没有缺失数的返回长度
765. 情侣牵手 - hard
计算最少交换座位的次数,保证(2N-2, 2N-1)连续排列
思路：遍历数组，它的另一半为当前值异或1，如果下一位不满足要求，遍历寻找，计算交换次数
18. 杨辉三角
思路：一循环控制层数二循环控制每层数字，每层数字与上层数字相关
670. 最大交换
给定一个非负整数，你至多可以交换一次数字中的任意两位。返回你能得到的最大值。
思路：1。候选数，标记其出现的位置  2。最大数为在候选数中出现的在当前位后面的数
238. 除自身以外数组的乘积
请不要使用除法，且在 O(n) 时间复杂度内完成此题。常数空间复杂度，除了输出数组以外
思路：左迭代res=num*k 右迭代 res=num*k
48. 旋转图像
给定一个 n × n 的二维矩阵表示一个图像，将图像顺时针旋转90度
思路：1。转置 i=j 2。反转 i，j = i，n-j-1
189. 旋转数组
思路：1.0 - n-1 2.0 - k-1 3.k - n-1











分糖果I   min(cnt,n/2)
分糖果II   数组迭代控制糖果数量和分配位置和数量  最后加上负数糖果
386. 字典序排数 dfs [1,10,11,12,13,2,3,4,5,6,7,8,9]  把字典序看成多层10叉树的组合
440. 字典序的第K小数字   1.判断cur与cur+1 之间的step 2.如果step大于k，答案肯定在其中，cur*10 k-- 3.否则移动cur++ k-steps
1163. 按字典序排在最后的子串  从中间字母最大的位置到结尾组成的子串为最后最大的子串  1.找字母最大的位置  2.截取字符串
1061. 按字典序排列最小的等效字符串  并查集 根据AB组成并查集，S根据并查集查询所属组
93. 复原IP地址  回溯 字符串substring
10. 正则表达式匹配 - difficult 动态规划dp  1.当前字符能匹配或者能与任意字符匹配 2.当前字符为*：2.1 0匹配 2.2多个匹配
103. 二叉树的锯齿形 层次遍历 使用层次遍历，使用LinkedList控制插入的顺序 addFirst addLast
22. 括号生成    dfs   1.左括号不能超过n  2.右括号不能超过左括号的个数
32. 最长有效括号  <栈，双指针>  1.(push,否则pop i-peek 2.{ left++ } right++ 左右迭代一次 求max
45. 跳跃游戏 II  贪心算法  每次在跳跃范围内找跳跃最远的数
71. 简化路径   栈  1.split . .. "" "str" push pop stringbuilder.append
114. 二叉树展开为链表   深度优先搜索   1.将左子树插入到右子树的地方  2.将原来的右子树接到左子树的最右边节点  3.考虑新的右子树的根节点，一直重复上边的过程，直到新的右子树为 null
51. N皇后   回溯问题    1.备忘录 col master slave剪枝  2.convert2board replace Q 3.满足条件
108. 将有序数组转换为二叉搜索树  dfs 递归   找到中间节点，一分为二，进入递归
234.回文链表    双指针   1.快慢指针找到链表中点  2.翻转后续链表  3.对比两个链表 4.恢复链表
155. 最小栈  数据栈和辅助栈   辅助栈用于记录比栈顶小的元素
44. 通配符匹配  ？*     双指针 1.两字符相等或者p字符为? 指针相加  2.p指针为* 标记两指针当前位置  3.不匹配 直接移动i j位置 4.p末尾不为* 不匹配
415. 字符串相加   字符串相加  个位数相加 carry进位  翻转字符串
74.搜索二维矩阵  双指针数组搜索 从左下角开始搜索，大于target时，向上移动，小于target时，向右移动
203.移除链表元素  双指针   加上哨兵节点 dummy
35. 搜索插入位置  二分法   标准二分法搜索
38. 外观数列  字符串   字符串迭代，比较当前字符与之前字符是否相同，拼接频次和字母
297. 二叉树的序列化与反序列化  序列化-层次遍历 反序列化-dfs
393. UTF-8 编码验证  位操作   1.判断首位1的长度  2.判断接下来每位为10的个数
209. 长度最小的子数组  双链表  1.迭代数组求和sum  2.while减小l指针
365. 水壶问题  数字  最大公约数  找到x,y的最大公约数能否z被整除
149. 直线上最多的点数  数字  用斜率  hashmap保存同斜率的线段数
862. 和至少为 K 的最短子数组  双端队列 || 双指针  1.如果开头小于0直接跳过  2.记录与末尾指针之间的和首次大于k的长度
118. 杨辉三角 数组  每个数是它左上方和右上方的数的和
328. 奇偶链表  链表  e != null && e.next != null
670. 最大交换  数组  从左到右迭代每一个数字，用后面出现的大数来替换，替换成功立即返回
189. 旋转数组  翻转
448. 找到所有数组中消失的数字  数组   普通替换法，置对应数组值为负值
442. 数组中重复的数据  数组   普通替换法，置对应数组值为负值
41. 缺失的第一个正数 - 数组   普通替换法，置对应数组值为负值
765. 情侣牵手  数组   寻找右手边的mate
67. 二进制求和  字符串相加
96.不同的二叉搜索树   动态规划  dp[i] += dp[j-1]*dp[i-j] 将每个节点作为根，左右节点构建左右子树
95. 不同的二叉搜索树 II  dfs